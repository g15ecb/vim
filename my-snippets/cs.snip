
snippet cw
        System.Console.WriteLine(${1:#:name}); ${2:TARGET}

snippet c-
        private class ${1:#:name} {
                ${3:TARGET}
        }

snippet c+
        public class ${1:#:name} {
                ${2:TARGET}
        }

snippet ci
        internal class ${1:#:name} {
                ${2:TARGET}
        }

snippet c-t
        private class ${1:#:name}<${2:#:type}> ${3:#:constraints} {
                ${4:TARGET}
        }

snippet c+t
        public class ${1:#:name}<${2:#:type}> ${3:#:constraints} {
                ${4:TARGET}
        }

snippet cit
        internal class ${1:#:name}<${2:#:type}> ${3:#:constraints} {
                ${4:TARGET}
        }

snippet sc-
        private static class ${1:#:name} {
                ${2:TARGET}
        }

snippet sc+
        public static class ${1:#:name} {
                ${2:TARGET}
        }

snippet sci
        internal static class ${1:#:name} {
                ${2:TARGET}
        }

snippet m+
        public ${1:#:type} ${2:#:name} (${3:#:args}) {
                ${4:TARGET}
        }

snippet m-
        private ${1:#:type} ${2:#:name} (${3:#:args}) {
                ${4:TARGET}
        }


snippet mi
        internal ${1:#:type} ${2:#:name} (${3:#:args}) {
                ${4:TARGET}
        }


snippet sm+
        public static ${1:#:type} ${2:#:name} (${3:#:args}) {
                ${4:TARGET}
        }

snippet sm-
        private static ${1:#:type} ${2:#:name} (${3:#:args}) {
                ${4:TARGET}
        }

snippet smi
        internal static ${1:#:type} ${2:#:name} (${3:#:args}) {
                ${4:TARGET}
        }

snippet main
        public static void Main(${1:#:args}) {
                ${2:TARGET}
        }

snippet ns 
        namespace ${1:#:name} {
                ${2:TARGET}
        }

snippet us
        using ${1:#:name}; ${2:TARGET}

snippet list
        System.Collections.Generic.List<${1:#:type}> ${2:TARGET}

snippet var
        var ${1:#:name} = ${2:#:name}; ${3:TARGET}

snippet new
        var ${1:#:name} = new ${2:#:name}; ${3:TARGET}

snippet assert
        System.Diagnostics.Debug.Assert(#{1:#:name}); ${2:TARGET}

snippet i+ 
        public interface ${1:#:name} { 
                ${2:TARGET}
        }

snippet i+t
        public interface ${1:#:name}<${2:#:type}> { 
                ${3:TARGET}
        }
